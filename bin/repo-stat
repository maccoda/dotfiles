#!/usr/local/bin/fish
set startDir $argv[1]
test -z $startDir; and set startDir '.'
echo "Starting at $startDir"

echo -n "Fetching updates for "
set dirs (fd -HI -t d '.git$' $startDir)
for dir in $dirs
    set -l repoDir (echo $dir | sed "s/\/.git//")
    set -l short_name (basename $repoDir)
    echo -n "$short_name "
    cd $repoDir
    # TODO: Silence this output
    git fetch &
    cd - > /dev/null
end

echo
wait

for dir in $dirs
    set -l repoDir (echo $dir | sed 's/\/.git//')
    cd $repoDir
    set -l short_name (basename $repoDir)

    set -l git_status (git status --porcelain &)
    set -l commits (git log origin/mainline..mainline 2> /dev/null | grep '^commit' | wc -l | tr -d " " &)
    set -l commits_behind (git log mainline..origin/mainline 2> /dev/null | grep '^commit' | wc -l | tr -d " " &)

    wait

    if test -n "$git_status"
        echo "$short_name is dirty"
    end

    if test $commits -gt 0
        echo "$short_name is ahead of origin"
    end

    if test $commits_behind -gt 0
        echo "$short_name is behind origin"
        read -P "Would you like to pull updates? (y/n) " input
        switch $input
            case Y y
                gpr
            case '*'
                echo "Leaving $short_name behind origin"
        end
    end
    cd - > /dev/null
end

